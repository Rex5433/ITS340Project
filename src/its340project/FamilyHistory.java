package its340project;
import javax.swing.JTextField;
import javax.swing.JCheckBox;
import java.util.*;
import java.awt.Color;

public class FamilyHistory extends javax.swing.JFrame {
    
    List<JTextField> textFields = new ArrayList<>();
    public int PatientID;
    public String PatientName;
    
    public FamilyHistory()
    {
        initComponents();
    }
    public FamilyHistory(int patientID, String name) {
        PatientID = patientID;
        PatientName = name;
        initComponents();
        
        lPatientID.setText(Integer.toString(PatientID));
        lName.setText(PatientName);
        
        textFields.add(tDisorderType);
        textFields.add(tFamName);
        textFields.add(tMDisorder);
        textFields.add(tRelation);
        textFields.add(tFamilyID);
        
        String connString = DBUtils.getConnString();
        List<String> names = new ArrayList<>();
        
        names = DBUtils.getFamNames(PatientID, connString);
        jComboBox2.addItem("Select Family Member...");
        for(String lname: names)
        {
            jComboBox2.addItem(lname);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        tPatientID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tFamName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tRelation = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tMDisorder = new javax.swing.JTextField();
        tDisorderType = new javax.swing.JTextField();
        cAlive = new javax.swing.JCheckBox();
        cLivePatient = new javax.swing.JCheckBox();
        cDisorderHRF = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        tFamilyID = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        bNew = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bInterview = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        bSelection = new javax.swing.JButton();
        bDemos = new javax.swing.JButton();
        bGenMed = new javax.swing.JButton();
        bFamHist = new javax.swing.JButton();
        bAlgHist = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        lPatientID = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Patient ID:");

        tPatientID.setEditable(false);
        tPatientID.setBackground(new java.awt.Color(153, 153, 153));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Family Name:");

        tFamName.setEditable(false);
        tFamName.setBackground(new java.awt.Color(153, 153, 153));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Alive:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Relation:");

        tRelation.setEditable(false);
        tRelation.setBackground(new java.awt.Color(153, 153, 153));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Disorder HRF:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Disorder Type:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Major Disorders:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Live With Patient:");

        tMDisorder.setEditable(false);
        tMDisorder.setBackground(new java.awt.Color(153, 153, 153));

        tDisorderType.setEditable(false);
        tDisorderType.setBackground(new java.awt.Color(153, 153, 153));

        cAlive.setBackground(new java.awt.Color(204, 204, 204));
        cAlive.setEnabled(false);
        cAlive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAliveActionPerformed(evt);
            }
        });

        cLivePatient.setBackground(new java.awt.Color(204, 204, 204));
        cLivePatient.setEnabled(false);
        cLivePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cLivePatientActionPerformed(evt);
            }
        });

        cDisorderHRF.setBackground(new java.awt.Color(204, 204, 204));
        cDisorderHRF.setEnabled(false);
        cDisorderHRF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDisorderHRFActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Family ID:");

        tFamilyID.setEditable(false);
        tFamilyID.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(tPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tDisorderType, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                .addComponent(tMDisorder)
                                .addComponent(tRelation)
                                .addComponent(tFamName))
                            .addComponent(cAlive)
                            .addComponent(cLivePatient)
                            .addComponent(cDisorderHRF)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFamilyID, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tFamilyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tFamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tRelation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cAlive))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cLivePatient))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tMDisorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tDisorderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cDisorderHRF))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        bNew.setText("New");
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bEdit.setText("Edit");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bNew, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNew)
                    .addComponent(bEdit))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSave)
                    .addComponent(bDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bInterview.setText("Start Automated Interview");
        bInterview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInterviewActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        bSelection.setText("Patient Selection");
        bSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSelectionActionPerformed(evt);
            }
        });

        bDemos.setText("Patient Demographics");
        bDemos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDemosActionPerformed(evt);
            }
        });

        bGenMed.setText("Gen Med History");
        bGenMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenMedActionPerformed(evt);
            }
        });

        bFamHist.setText("Family History");
        bFamHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFamHistActionPerformed(evt);
            }
        });

        bAlgHist.setText("Allergy History");
        bAlgHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAlgHistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bDemos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bGenMed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bFamHist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bAlgHist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bDemos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bGenMed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bFamHist)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bAlgHist)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        jLabel23.setText("PatientID: ");

        lPatientID.setText("Value Not Loaded...");

        jLabel24.setText("Patient Name:");

        lName.setText("Value Not Loaded...");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lPatientID)
                .addGap(33, 33, 33)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(lName)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 372, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bInterview, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addComponent(bInterview)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
//        for (JTextField tf: textFields)
//        {
//            tf.setEditable(false);
//            tf.setBackground(Color.gray);
//        }
//        cAlive.enableInputMethods(false);
//        cLivePatient.enableInputMethods(false);
//        cDisorderHRF.enableInputMethods(false);
        String selectedName = String.valueOf(jComboBox2.getSelectedItem());
        String connString = DBUtils.getConnString();
        Patient patient = new Patient();
        
        patient = DBUtils.getFamilyHist(PatientID, selectedName, connString);
        
        //System.out.println(patient.getRelation());
        
        if (patient != null)
        {
            tDisorderType.setText(patient.getSpecificTypeDisorder());
            tFamName.setText(patient.getName());
            if(patient.getLivesWithPatient() == true)
            {
                cLivePatient.setSelected(true);
            }
            else
            {
                cLivePatient.setSelected(false);
            }
            if(patient.getAlive() == true)
            {
                cAlive.setSelected(true);
            }
            else
            {
                cAlive.setSelected(false);
            }
            if(patient.getDisorderHRF() == true)
            {
                cDisorderHRF.setSelected(true);
            }
            else
            {
                cDisorderHRF.setSelected(false);
            }
            tMDisorder.setText(patient.getMajorDisorder());
            tPatientID.setText(Integer.toString(patient.getPatientID()));
            tRelation.setText(patient.getRelation());
            tFamilyID.setText(Integer.toString(patient.getFamilyID()));
            
            System.out.println(patient.getRelation());
        }
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed

        for (JTextField tf: textFields)
        {
            tf.setText(null);
            tf.setEditable(true);
            tf.setBackground(Color.white);
        }
        tPatientID.setText(Integer.toString(PatientID));
        tPatientID.setEditable(false);
        tFamilyID.setEditable(false);
        tFamilyID.setBackground(Color.gray);
        cAlive.setEnabled(true);
        cLivePatient.setEnabled(true);
        cDisorderHRF.setEnabled(true);
        
        jComboBox2.addItem("");
        jComboBox2.setSelectedItem("");
    }//GEN-LAST:event_bNewActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        String connString = DBUtils.getConnString();
        int FamilyID;
        
        if(tFamilyID.getText().isEmpty())
        {
            FamilyID = 999999;
        }
        else
        {
            FamilyID = Integer.parseInt(tFamilyID.getText());
        }
        Patient saveP = new Patient(
            PatientID,
            FamilyID,
            tFamName.getText(),
            tRelation.getText(),
            cAlive.isSelected(),
            cLivePatient.isSelected(),
            tMDisorder.getText(),
            tDisorderType.getText(),
            cDisorderHRF.isSelected()
);

        DBUtils.saveFamHist(saveP, connString);
        
        List<JTextField> textFields = new ArrayList<>();
        textFields.add(tFamName);
        textFields.add(tRelation);
        textFields.add(tMDisorder);
        textFields.add(tDisorderType);

        List<JCheckBox> checkBoxes = new ArrayList<>();
        checkBoxes.add(cAlive);
        checkBoxes.add(cLivePatient);
        checkBoxes.add(cDisorderHRF);

        for (JTextField tf : textFields) {
            tf.setEditable(false);
            tf.setBackground(Color.gray);
        }

        for (JCheckBox cb : checkBoxes) {
            cb.setEnabled(false);
            cb.setBackground(Color.gray);
        }

        FamilyHistory fh = new FamilyHistory(PatientID, PatientName);
        fh.setVisible(true);
        dispose();
    }//GEN-LAST:event_bSaveActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed

        for (JTextField tf: textFields)
        {
            tf.setEditable(true);
            tf.setBackground(Color.white);
        }
        tPatientID.setEditable(false);
        cAlive.setEnabled(true);
        cLivePatient.setEnabled(true);
        cDisorderHRF.setEnabled(true);
    }//GEN-LAST:event_bEditActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        String connString = DBUtils.getConnString();
        DBUtils.deleteFamHist(Integer.parseInt(tFamilyID.getText()), connString);

        //When Taylor completes the code for the Select Patient GUI, upon Patient deletion, it will provide a message and send you back to there.
        //For now, just imagine that it sends you there, its a magical place. Nevermind, its just Netbeans. Help.
    }//GEN-LAST:event_bDeleteActionPerformed

    private void cAliveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAliveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cAliveActionPerformed

    private void cLivePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cLivePatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cLivePatientActionPerformed

    private void cDisorderHRFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDisorderHRFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDisorderHRFActionPerformed

    private void bInterviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInterviewActionPerformed
        DecisionTree famInterview = new DecisionTree();
        
        famInterview.createRoot(1, "Input: Please enter Family Member Name");
        
        famInterview.insertYesNode(1, 2, "Input: What is your relation to family member?");
        famInterview.insertYesNode(2, 3, "Input: Do they live with you?");
        famInterview.insertYesNode(3, 4, "Do they have a disorder?");
        famInterview.insertYesNode(4, 5, "Input: What general disorder do they have?");
        famInterview.insertYesNode(5, 6, "Input: What is the specific type of disorder?");
        famInterview.insertYesNode(6, 7, "Input: Does their disorder have a health risk factor?");
        famInterview.insertNoNode(4, 8, "Interview is complete, thank you!");
        famInterview.insertYesNode(7, 9, "Interview is complete, thank you!");
        
        famInterview.queryTree(famInterview.getRoot());
        List<String> interviewAnswers = new ArrayList<>();
        List<String> interviewQuestions = new ArrayList<>();
        interviewAnswers = famInterview.getAnswers(); 
        interviewQuestions = famInterview.getQuestions();
        
        if(interviewAnswers.size() == 6)
        {
            boolean livePatient, disorderHRF;
            if(interviewAnswers.get(2).toLowerCase().contains("yes"))
            {
                livePatient = true;
            }
            else if (interviewAnswers.get(2).toLowerCase().contains("no"))
            {
                livePatient = false;
            }
            else
            {
                livePatient = false;
            }
            
            if(interviewAnswers.get(5).toLowerCase().contains("yes"))
            {
                disorderHRF = true;
            }
            else if (interviewAnswers.get(5).toLowerCase().contains("no"))
            {
                disorderHRF = false;
            }
            else
            {
                disorderHRF = false;
            }
            
            Patient interview = new Patient(PatientID, 999999, interviewAnswers.get(0), interviewAnswers.get(1), true, livePatient,
                                            interviewAnswers.get(3), interviewAnswers.get(4), disorderHRF);
            
            DBUtils.saveFamHist(interview, DBUtils.getConnString());
            famInterview.logInterview(interview, famInterview);
        }
        else if (interviewAnswers.size() == 3)
        {
            boolean livePatient;
            if(interviewAnswers.get(2).toLowerCase().contains("yes"))
            {
                livePatient = true;
            }
            else if (interviewAnswers.get(2).toLowerCase().contains("no"))
            {
                livePatient = false;
            }
            else
            {
                livePatient = false;
            }
            
            Patient interview = new Patient(PatientID, 999999, interviewAnswers.get(0), interviewAnswers.get(1), true, livePatient,
                                            "NA", "NA", false);
            
            DBUtils.saveFamHist(interview, DBUtils.getConnString());
            famInterview.logInterview(interview, famInterview);
        }
        FamilyHistory fh = new FamilyHistory(PatientID, PatientName);
        fh.setVisible(true);
        dispose();
    }//GEN-LAST:event_bInterviewActionPerformed

    private void bSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSelectionActionPerformed
        PatientSelection ps = new PatientSelection();
        ps.setVisible(true);
        dispose();
    }//GEN-LAST:event_bSelectionActionPerformed

    private void bDemosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDemosActionPerformed
        PatientDemographics dp = new PatientDemographics(PatientID);
        dp.setVisible(true);
        dispose();
    }//GEN-LAST:event_bDemosActionPerformed

    private void bGenMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenMedActionPerformed
        GeneralMedical gm = new GeneralMedical(PatientID, PatientName);
        gm.setVisible(true);
        dispose();
    }//GEN-LAST:event_bGenMedActionPerformed

    private void bFamHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFamHistActionPerformed
        FamilyHistory fh = new FamilyHistory(PatientID, PatientName);
        fh.setVisible(true);
        dispose();
    }//GEN-LAST:event_bFamHistActionPerformed

    private void bAlgHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAlgHistActionPerformed
        AllergyHistory ah = new AllergyHistory(PatientID, PatientName);
        ah.setVisible(true);
        dispose();
    }//GEN-LAST:event_bAlgHistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FamilyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FamilyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FamilyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FamilyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FamilyHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAlgHist;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bDemos;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bFamHist;
    private javax.swing.JButton bGenMed;
    private javax.swing.JButton bInterview;
    private javax.swing.JButton bNew;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bSelection;
    private javax.swing.JCheckBox cAlive;
    private javax.swing.JCheckBox cDisorderHRF;
    private javax.swing.JCheckBox cLivePatient;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lPatientID;
    private javax.swing.JTextField tDisorderType;
    private javax.swing.JTextField tFamName;
    private javax.swing.JTextField tFamilyID;
    private javax.swing.JTextField tMDisorder;
    private javax.swing.JTextField tPatientID;
    private javax.swing.JTextField tRelation;
    // End of variables declaration//GEN-END:variables
}
